package main

import (
	"fmt"
	"log"
	"net/http"
)

func main() {
	mux := http.NewServeMux()

	mux.HandleFunc("/", home)
	mux.HandleFunc("/snippet/", ShowSnippet)
	mux.HandleFunc("/snippet/create", CreateSnippet)

	log.Println("Starting server on :4000")

	err := http.ListenAndServe(":4000", mux)
	if err != nil {
		log.Fatal(err)
	}
}

func home(w http.ResponseWriter, r *http.Request) {
	if r.URL.Path != "/" {
		//http.Error(w, http.StatusText(404),http.StatusNotFound)
		http.NotFound(w, r)
		return
	}
	_, _ = w.Write([]byte("Hello from Snippetbox"))
}

func ShowSnippet(w http.ResponseWriter, r *http.Request) {
	if r.URL.Path != "/snippet/" {
		http.NotFound(w, r)
		return
	}
	id := r.URL.Query().Get("id")
	if id == "" {
		http.NotFound(w, r)
		return
	}
	fmt.Fprintf(w, "Display a specific snippet with ID %s...", id)

}

func CreateSnippet(w http.ResponseWriter, r *http.Request) {
	if r.Method != "POST" {
		w.Header().Set("Allow", "POST")
		w.Header().Set("dummy-header", "dummy value")
		w.Header()["dummy-header"] = []string{"dummy value"}

		//w.WriteHeader(405)
		//w.Write([]byte("Method Not Allowed"))

		http.Error(w, "Method Not Allowed", 405)

		return
	}
	_, _ = w.Write([]byte("Create a new snippet..."))
}
